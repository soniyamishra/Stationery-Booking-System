[{"E:\\Module3\\Integrated\\SBS\\src\\index.js":"1","E:\\Module3\\Integrated\\SBS\\src\\reportWebVitals.js":"2","E:\\Module3\\Integrated\\SBS\\src\\App.js":"3","E:\\Module3\\Integrated\\SBS\\src\\ExportPdf.js":"4","E:\\Module3\\Integrated\\SBS\\src\\components\\Navbar.js":"5","E:\\Module3\\Integrated\\SBS\\src\\components\\ProductBooking.js":"6","E:\\Module3\\Integrated\\SBS\\src\\components\\ShowAllProduct.js":"7","E:\\Module3\\Integrated\\SBS\\src\\components\\SideBar.js":"8","E:\\Module3\\Integrated\\SBS\\src\\components\\ViewBooking.js":"9","E:\\Module3\\Integrated\\SBS\\src\\components\\AddDeliveryStatus.js":"10","E:\\Module3\\Integrated\\SBS\\src\\components\\AddReview.js":"11","E:\\Module3\\Integrated\\SBS\\src\\components\\UpdateDeliveryStatus.js":"12","E:\\Module3\\Integrated\\SBS\\src\\components\\DeleteBooking.js":"13","E:\\Module3\\Integrated\\SBS\\src\\components\\UpdateReview.js":"14","E:\\Module3\\Integrated\\SBS\\src\\components\\ViewDeliveryStatus.js":"15","E:\\Module3\\Integrated\\SBS\\src\\components\\ShowReviews.js":"16","E:\\Module3\\Integrated\\SBS\\src\\components\\login.js":"17","E:\\Module3\\Integrated\\SBS\\src\\components\\UpdateDeliveryComponent.js":"18","E:\\Module3\\Integrated\\SBS\\src\\components\\AddDeliveryComponent.js":"19","E:\\Module3\\Integrated\\SBS\\src\\components\\AddProduct.js":"20","E:\\Module3\\Integrated\\SBS\\src\\components\\ManageProduct.js":"21","E:\\Module3\\Integrated\\SBS\\src\\components\\ProductApproval.js":"22","E:\\Module3\\Integrated\\SBS\\src\\components\\SearchBox.js":"23","E:\\Module3\\Integrated\\SBS\\src\\components\\Updatecount.js":"24","E:\\Module3\\Integrated\\SBS\\src\\components\\DeleteProduct.js":"25","E:\\Module3\\Integrated\\SBS\\src\\components\\ExportExcel.js":"26","E:\\Module3\\Integrated\\SBS\\src\\store.js":"27","E:\\Module3\\Integrated\\SBS\\src\\serviceWorker.js":"28","E:\\Module3\\Integrated\\SBS\\src\\helpers\\history.js":"29","E:\\Module3\\Integrated\\SBS\\src\\reducers\\index.js":"30","E:\\Module3\\Integrated\\SBS\\src\\reducers\\message.js":"31","E:\\Module3\\Integrated\\SBS\\src\\reducers\\auth.js":"32"},{"size":643,"mtime":1611670212681,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1611051674000,"results":"35","hashOfConfig":"34"},{"size":4319,"mtime":1611670415739,"results":"36","hashOfConfig":"34"},{"size":4411,"mtime":1611661667083,"results":"37","hashOfConfig":"34"},{"size":2286,"mtime":1611331052000,"results":"38","hashOfConfig":"34"},{"size":8975,"mtime":1611601318000,"results":"39","hashOfConfig":"34"},{"size":4412,"mtime":1611662479428,"results":"40","hashOfConfig":"34"},{"size":2812,"mtime":1611607114000,"results":"41","hashOfConfig":"34"},{"size":2221,"mtime":1611610472000,"results":"42","hashOfConfig":"34"},{"size":2405,"mtime":1611601754000,"results":"43","hashOfConfig":"34"},{"size":3358,"mtime":1611597780000,"results":"44","hashOfConfig":"34"},{"size":2807,"mtime":1611601876000,"results":"45","hashOfConfig":"34"},{"size":3699,"mtime":1611599794000,"results":"46","hashOfConfig":"34"},{"size":4209,"mtime":1611604494000,"results":"47","hashOfConfig":"34"},{"size":2702,"mtime":1611601912000,"results":"48","hashOfConfig":"34"},{"size":4358,"mtime":1611598258000,"results":"49","hashOfConfig":"34"},{"size":194,"mtime":1611427924000,"results":"50","hashOfConfig":"34"},{"size":2816,"mtime":1611601826000,"results":"51","hashOfConfig":"34"},{"size":3713,"mtime":1611601724000,"results":"52","hashOfConfig":"34"},{"size":9866,"mtime":1611651852000,"results":"53","hashOfConfig":"34"},{"size":5747,"mtime":1611653306000,"results":"54","hashOfConfig":"34"},{"size":6104,"mtime":1611649634000,"results":"55","hashOfConfig":"34"},{"size":388,"mtime":1611252954000,"results":"56","hashOfConfig":"34"},{"size":5830,"mtime":1611653512000,"results":"57","hashOfConfig":"34"},{"size":6789,"mtime":1611662520308,"results":"58","hashOfConfig":"34"},{"size":3570,"mtime":1611596100000,"results":"59","hashOfConfig":"34"},{"size":352,"mtime":1611669848610,"results":"60","hashOfConfig":"34"},{"size":5225,"mtime":1611670270935,"results":"61","hashOfConfig":"34"},{"size":97,"mtime":1611669775032,"results":"62","hashOfConfig":"34"},{"size":164,"mtime":1611669787710,"results":"63","hashOfConfig":"34"},{"size":369,"mtime":1611669787728,"results":"64","hashOfConfig":"34"},{"size":827,"mtime":1611669787608,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"l72ejo",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"77"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"77"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"77"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"77"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"77"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"77"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"77"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"77"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"77"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"69"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},"E:\\Module3\\Integrated\\SBS\\src\\index.js",["153"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\nserviceWorker.unregister();\n",["154","155"],"E:\\Module3\\Integrated\\SBS\\src\\reportWebVitals.js",[],"E:\\Module3\\Integrated\\SBS\\src\\App.js",[],"E:\\Module3\\Integrated\\SBS\\src\\ExportPdf.js",["156","157"],"import React, { Component } from 'react'  \r\nimport Table from '@material-ui/core/Table';  \r\nimport TableBody from '@material-ui/core/TableBody';  \r\nimport TableCell from '@material-ui/core/TableCell';  \r\nimport TableContainer from '@material-ui/core/TableContainer';  \r\nimport TableHead from '@material-ui/core/TableHead';  \r\nimport TableRow from '@material-ui/core/TableRow';  \r\nimport Paper from '@material-ui/core/Paper';  \r\nimport axios from 'axios';  \r\nimport jsPDF from 'jspdf';  \r\nimport Button from '@material-ui/core/Button';  \r\nimport './App.css';  \r\nimport html2canvas from 'html2canvas';\r\nimport ReactToPdf from 'react-to-pdf';  \r\n  \r\nexport class ExportPdf extends Component {  \r\n  constructor(props) {  \r\n    super(props)  \r\n    this.state = {  \r\n      ProductData: []  \r\n    }  \r\n  } \r\n\r\n  \r\n  componentDidMount()\r\n  {  \r\n    axios.get('http://localhost:2211/api/pdf/products').then(response =>\r\n    {  \r\n        console.log(response.data);  \r\n       \r\n    }).catch((error) => {\r\n        console.log(\"Some error in reading the data \");\r\n       \r\n    })\r\n      axios.get('http://localhost:2211/product/allproduct').then(response =>\r\n      {  \r\n          console.log(response.data);  \r\n          this.setState\r\n          ({  \r\n              ProductData: response.data  \r\n          });  \r\n      }).catch((error) => {\r\n          console.log(\"Some error in reading the data \");\r\n          this.setState({ errMsg: \"Error In Reading product Data\" })\r\n      })\r\n\r\n     \r\n  }  \r\n\r\n  \r\n  render() {  \r\n    console.log(this.state.ProductData);  \r\n    return (  \r\n      <div>  \r\n        <h1 align=\"center\"> <i className=\"fas fa-swatchbook\"> Stationary Booking System </i></h1> <br/>\r\n        <TableContainer id=\"pdfdiv\" className=\"txt\" component={Paper}>  \r\n          <Table stickyHeader aria-label=\"sticky table\">  \r\n            <TableHead>  \r\n              <TableRow>  \r\n                <TableCell><strong>productId</strong></TableCell>  \r\n                <TableCell align=\"right\"><strong>productName</strong></TableCell>  \r\n                <TableCell align=\"right\"><strong>productModel</strong></TableCell>  \r\n                <TableCell align=\"right\"><strong>productBrand</strong></TableCell>  \r\n                <TableCell align=\"right\"><strong>productPrice</strong></TableCell>  \r\n                <TableCell align=\"right\"><strong>productCount</strong></TableCell>  \r\n                <TableCell align=\"right\"><strong>productCreatedAt</strong></TableCell>\r\n                <TableCell align=\"right\"><strong>productUpdatedAt</strong></TableCell>\r\n                <TableCell align=\"right\"><strong>productDeletedAt</strong></TableCell>  \r\n                <TableCell style={{ paddingRight: \"60px\" }} align=\"right\" ><strong>productDeletedFlag</strong></TableCell>  \r\n              </TableRow>  \r\n            </TableHead>  \r\n            <TableBody>  \r\n              {  \r\n                this.state.ProductData.map((p, index) => {  \r\n                  return <TableRow key={index}>  \r\n                    <TableCell component=\"th\" scope=\"row\">  \r\n                        {p.productId}  \r\n                    </TableCell>  \r\n                    <TableCell align=\"right\">{p.productName}</TableCell>  \r\n                    <TableCell align=\"right\">{p.productModel}</TableCell>  \r\n                    <TableCell align=\"right\">{p.productBrand}</TableCell>  \r\n                    <TableCell align=\"right\">{p.productPrice}</TableCell>  \r\n                    <TableCell align=\"right\">{p.productCount}</TableCell>  \r\n                    <TableCell align=\"right\">{p.productCreatedAt}</TableCell>\r\n                    <TableCell align=\"right\">{p.productUpdatedAt}</TableCell> \r\n                    <TableCell align=\"right\">{p.productDeletedAt}</TableCell>   \r\n                    <TableCell style={{ paddingRight: \"114px\" }} align=\"right\">{p.productDeleteFlag}</TableCell>  \r\n                  </TableRow>  \r\n                })  \r\n              }  \r\n            </TableBody>  \r\n          </Table><br></br> \r\n          <div class=\"text-center\">  \r\n            <ReactToPdf>\r\n              {({toPdf, targetRef}) =>  (\r\n                <Button onClick={toPdf} ref={targetRef} variant=\"contained\" color=\"primary\">\r\n                    DOWNLOAD\r\n                </Button>\r\n              )}\r\n            </ReactToPdf>\r\n          </div>   \r\n        </TableContainer>  \r\n      </div>  \r\n    );  \r\n  }  \r\n}  \r\nexport default ExportPdf;",["158","159"],"E:\\Module3\\Integrated\\SBS\\src\\components\\Navbar.js",["160","161","162","163","164"],"import React from 'react';\nimport {BrowserRouter as Router,Route,Link ,NavLink} \nfrom \"react-router-dom\";\n//import axios from \"axios\";\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nclass Navbar extends React.Component\n{\n    render()\n    {\n        return(\n           <div>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <div className=\"container-fluid\">\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"navbar-brand pl-4 ml-4\">\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"#\"><i className=\"fas fa-swatchbook\"> SBS</i></a>\n                        </li>\n                        <li className=\"navbar-brand pl-4 ml-4\">\n                        <NavLink className=\"nav-link active\" aria-current=\"page\" exact to = \"/ShowAllProduct\">Home</NavLink>\n                        </li>\n                        <li className=\"navbar-brand\">\n                        <NavLink className=\"nav-link\" exact to = \"/SideBar\">DashBoard</NavLink>\n                        </li>\n                        <li className=\"navbar-brand\">\n                        <NavLink className=\"nav-link\" exact to=\"/ViewBooking\">Bookings</NavLink>\n                        </li>\n                        <li className=\"navbar-brand\">\n                        <NavLink className=\"nav-link\" exact to=\"/ViewDeliveryStatus\">Delivery Status</NavLink>\n                        </li>\n                        <li className=\"navbar-brand\">\n                        <form className=\"d-flex\">\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n                        <button className=\"btn btn-outline-light\" type=\"submit\">Search</button>\n                        </form>\n                        </li>\n                        <li className=\"navbar-brand\">\n                        <a className=\"nav-link\" href=\"#\">Logout</a>\n                        </li>\n                    </ul>\n                  \n                    </div>\n                </div>\n            </nav>\n        </div>\n        )\n    \n    }\n    \n}\n\nexport default Navbar;","E:\\Module3\\Integrated\\SBS\\src\\components\\ProductBooking.js",["165","166","167"],"\nimport React from \"react\";\nimport axios  from \"axios\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logindata from \"./login\";\nimport { Form, Button} from 'react-bootstrap';\n\nclass ProductBooking extends React.Component\n{   \n    state = {\n      bookingId: \"\",\n      productQuantity: \"\",\n      address: \"\",\n      city: \"\",\n      state:\"\",\n      zipcode:\"\",\n      productId: \"\",\n      product: [],\n      userId:1,\n      login:[]\n      \n  };\n\n  componentDidMount() {\n    axios.get(`http://localhost:2211/product/${this.props.match.params.id}`).then((responseData) => {\n        console.log(responseData);\n        this.setState({ product: responseData.data })\n\n    }).catch((error) => {\n        console.log(\"Some error in reading the data \");\n        this.setState({ errMsg: \"Error In Reading product Data\" })\n    })\n    alert(`${this.state.product.productId}`)\n    this.handleChange=this.handleChange.bind(this);\n    this.handleSubmit=this.handleSubmit.bind(this);\n}\n\nhandleChange(event)\n{   \n    this.setState({\n        ...this.state,\n        [event.target.name] : event.target.value,\n        userId:1,\n        \n    })\n\n    console.log(this.state.city);\n}\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    let Allbooking = {\n      bookingId: this.state.bookingId,\n      productQuantity: this.state.productQuantity,\n      address: this.state.address,\n      city: this.state.city,\n      state: this.state.state,\n      zipcode: this.state.zipcode,\n      product: {\n        productId: this.state.product.productId,\n      },\n      login: {\n        userId:1,\n      },\n    };\n\n    await axios\n      .post(\"http://localhost:2211/productbooking\", Allbooking)\n      .then((data) => {\n      alert(\"BOOKING SUCCESSFULY!\")\n      this.props.history.push(\"/ViewBooking\")\n    })\n      .catch((error) => {\n        alert(error.response.data.message);\n      });\n    console.log(this.state.product.productId);\n    console.log(this.state.login.userId);\n    console.log(this.state.product);\n    console.log(this.state.login);\n  };\n  \n    \n    render()\n    {  \n      return( \n        <div className= \"container-sm  mt-5 pd-4\">  \n        <div class=\"card\">\n            <div class=\"card-header\">\n               <h4>All Bookings</h4>\n            </div>\n            <div class=\"card-body\"></div>\n            <form className=\"row g-3\" onSubmit={this.handleSubmit}  >\n                  <label for=\"rproductQuantity\" className=\"form-label\">Enter your Comment</label>\n                   <input type=\"number\" \n                   className=\"form-control\" \n                   id=\"productQuantity\" \n                   name=\"productQuantity\"  \n                   placeholder=\"Enter productQuantity\" \n                   onChange={this.handleChange} \n                   required \n                   pattern=\"[0-9\\s]+\"/>\n                   \n                   <label for=\"address\" className=\"form-label\">Enter Rating Number</label>\n                   <input type=\"text\" \n                   className=\"form-control\" \n                   id=\"address\"\n                   name=\"address\" \n                   placeholder=\"Enter Your address\" \n                   onChange={this.handleChange} \n                   required \n                   pattern=\"[A-Za-z\\s]+\" />   \n\n                  <label for=\"city\" className=\"form-label\">Enter city</label>\n                   <input type=\"text\" \n                   className=\"form-control\" \n                   id=\"city\"\n                   name=\"city\" \n                   placeholder=\"Enter Your city\" \n                   onChange={this.handleChange} \n                   required \n                   pattern=\"[A-Za-z\\s]+\" /> \n\n\n                  <label for=\"state\" className=\"form-label\">Enter state</label>\n                   <input type=\"text\" \n                   className=\"form-control\" \n                   id=\"state\"\n                   name=\"state\" \n                   placeholder=\"Enter state\" \n                   onChange={this.handleChange} \n                   required \n                   pattern=\"[A-Za-z\\s]+\" /> \n\n                    <label for=\"zipcode\" className=\"form-label\">Enter zipcode</label>\n                   <input type=\"text\" \n                   className=\"form-control\" \n                   id=\"zipcode\"\n                   name=\"zipcode\" \n                   placeholder=\"Enter zipcode\" \n                   onChange={this.handleChange} \n                   required \n                   pattern=\"[0-9\\s]+\"\n                    /> \n\n              <div className =\"col-2\">\n                   <button className=\"btn btn-primary\"   type=\"submit\">Book</button>\n              </div>      \n            </form>\n         </div>\n        </div> \n         \n      \n        )\n        \n    }\n    \n}\n\nexport default ProductBooking;\n\n\n/*\n//=======================================================================================================\nimport React from \"react\";\nimport axios  from \"axios\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logindata from \"./login\";\nimport { Form, Button} from 'react-bootstrap';\n\nclass ProductBooking extends React.Component\n{   \n    state = {\n      bookingId: \"\",\n      productQuantity: \"\",\n      address: \"\",\n      city: \"\",\n      state:\"\",\n      zipcode:\"\",\n      productId: \"\",\n      product: [],\n      userId:1,\n      login:[]\n      \n  };\n\n  componentDidMount() {\n    axios.get(`http://localhost:2211/product/${this.props.match.params.id}`).then((responseData) => {\n        console.log(responseData);\n        this.setState({ product: responseData.data })\n\n    }).catch((error) => {\n        console.log(\"Some error in reading the data \");\n        this.setState({ errMsg: \"Error In Reading product Data\" })\n    })\n    alert(`${this.state.product.productId}`)\n    this.handleChange=this.handleChange.bind(this);\n    this.handleSubmit=this.handleSubmit.bind(this);\n}\n\nhandleChange(event)\n{   \n    this.setState({\n        ...this.state,\n        [event.target.name] : event.target.value,\n        userId:1,\n        \n    })\n\n    console.log(this.state.city);\n}\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    let Allbooking = {\n      bookingId: this.state.bookingId,\n      productQuantity: this.state.productQuantity,\n      address: this.state.address,\n      city: this.state.city,\n      state: this.state.state,\n      zipcode: this.state.zipcode,\n      product: {\n        productId: this.state.product.productId,\n      },\n      login: {\n        userId:1,\n      },\n    };\n\n    await axios\n      .post(\"http://localhost:2211/productbooking\", Allbooking)\n      .then((data) => {\n      alert(\"BOOKING SUCCESSFULY!\")\n    })\n      .catch((error) => {\n        alert(error.response.data.message);\n      });\n    console.log(this.state.product.productId);\n    console.log(this.state.login.userId);\n    console.log(this.state.product);\n    console.log(this.state.login);\n  };\n  \n    \n    render()\n    {  \n      return( \n        <div>   \n         \n  <Form  onSubmit={this.handleSubmit} >\n  \n        <Form.Group controlId=\"productQuantity\">\n        <Form.Label>Product Quantity</Form.Label>\n        <Form.Control type=\"number\" \n                      name=\"productQuantity\" \n                      placeholder=\"Product Quantity\" \n                      onChange={this.handleChange} \n                      required\n                      pattern=\"[0-9\\s]+\" />\n        <Form.Text className=\"text-muted\">\n        </Form.Text>\n      </Form.Group>\n\n\n      <Form.Group controlId=\"address\">\n        <Form.Label>Address</Form.Label>\n        <Form.Control type=\"text\" \n                      name=\"address\" \n                      placeholder=\"Address\" \n                      onChange={this.handleChange} \n                      required \n                      pattern=\"[A-Za-z0-9\\s]+\" />\n      </Form.Group>\n\n  \n \n      <Form.Group controlId=\"city\">\n        <Form.Label>city</Form.Label>\n        <Form.Control type=\"text\" \n                      name=\"city\"\n                      placeholder=\"city\" \n                      onChange={this.handleChange} \n                      required\n                      pattern=\"[A-Za-z\\s]+\" />\n      </Form.Group>\n\n      <Form.Group controlId=\"state\">\n        <Form.Label>state</Form.Label>\n        <Form.Control type=\"text\" \n                      name=\"state\"\n                      placeholder=\"state\" \n                      onChange={this.handleChange} \n                      required\n                      pattern=\"[A-Za-z\\s]+\" />\n      </Form.Group>\n\n      <Form.Group controlId=\"zipcode\">\n        <Form.Label>zipcode</Form.Label>\n        <Form.Control type=\"text\" \n                      name=\"zipcode\"\n                      placeholder=\"zipcode\" \n                      onChange={this.handleChange} \n                      required\n                      pattern=\"[0-9\\s]+\"/>\n      </Form.Group>\n \n      <Button variant=\"primary\" type=\"submit\">\n          Book\n      </Button>\n  </Form>\n\n       \n        </div>\n\n  \n        )\n        \n    }\n    \n}\n\nexport default ProductBooking;\n*/","E:\\Module3\\Integrated\\SBS\\src\\components\\ShowAllProduct.js",["168","169"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport SearchBox from './SearchBox';\n\n//import {BrowserRouter as Router,Route,Link ,NavLink} \n//from \"react-router-dom\";\nimport axios from \"axios\";\nimport  ReactPaginate from 'react-paginate';\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nclass DeleteProduct extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            offset: 0,\n            perPage: 5,\n            currentPage: 0,\n            searchField: '',   \n            orgtableData: [],         \n            product: [],\n            errMsg: \"\"\n        }\n\n        this.handlePageClick = this.handlePageClick.bind(this);\n    }\n\n    handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }, () => {\n            this.loadMoreData()\n        });\n\n    };\n\n    loadMoreData() {\n\t\tconst data = this.state.orgtableData;\n\t\t\n\t\tconst slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n\t\tthis.setState({\n\t\t\tpageCount: Math.ceil(data.length / this.state.perPage),\n\t\t\tproduct:slice\n\t\t})\n\t\n    }\n\n    componentDidMount() {\n        axios.get(`http://localhost:2211/product/allproduct`).then((responseData) => {\n            console.log(responseData);\n            var data = responseData.data;\n\t\t\t\t\n            var slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n\n            this.setState({\n                pageCount: Math.ceil(data.length / this.state.perPage),\n                    orgtableData :responseData.data,\n                 product: slice \n                })\n            console.log(data);\n        }).catch((error) => {\n            console.log(\"Some error in reading the data \");\n            this.setState({ errMsg: \"Error In Reading product Data\" })\n        })\n    }\n\n    render(){\n\n        var productList=this.state.product.map(\n            (prod,index)=>\n            {\n            return (    \n                <tr key={prod.id}>\n                    <td scope=\"row\"> {prod.productName} </td>  \n                    <td> {prod.productModel} </td>\n                    <td> {prod.productBrand} </td> \n                    <td> {prod.productPrice} Rs.</td> \n                   \n                    <td><NavLink exact to = {`/ProductBooking/${prod.productId}`}type=\"button\" className=\"mr-4 btn btn-success\"> Place Order</NavLink></td>\n                    <td> <NavLink exact to={`/ShowReviews/${prod.productId}`} button className=\"mr-4 btn btn-success\">Reviews</NavLink></td>\n                    <td> <NavLink exact to={`/AddReview/${prod.productId}`} button className=\"mr-4 btn btn-success\">AddReview</NavLink></td>\n                </tr>)\n            }\n        );\n        return(\n            <div className=\"container-sm\">\n                <h1>List Of Products</h1>\n                <table class=\"table table-striped table-hover\" border=\"2\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" className = \"bg-dark text-white\">Product Name</th>\n                            <th scope=\"col\" className = \"bg-dark text-white\">Model Name</th>\n                            <th scope=\"col\" className = \"bg-dark text-white\">Brand Name</th>\n                            <th scope=\"col\" className = \"bg-dark text-white\">Price</th>\n                            <th colspan='3'scope=\"col\" className = \"bg-dark text-white\">Action</th>\n                          \n                        </tr>\n                    </thead>\n                    <tbody>\n                        {productList}\n                    </tbody>\n                </table>\n                <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={this.state.pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={this.handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/>\n            </div>\n        )\n    }\n\n}\n\nexport default DeleteProduct;","E:\\Module3\\Integrated\\SBS\\src\\components\\SideBar.js",["170"],"import React from 'react';\nimport {BrowserRouter as Router,Route,Link ,NavLink} \nfrom \"react-router-dom\";\nimport AddDeliveryStatus from './AddDeliveryStatus';\n//import axios from \"axios\";\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport AddProduct from './AddProduct';\nimport AddReview from './AddReview';\nimport ManageProduct from './ManageProduct';\nimport UpdateDeliveryStatus from './UpdateDeliveryStatus';\nimport AddDeliveryComponent from \"./AddDeliveryComponent\";\nimport UpdateDeliveryComponent from \"./UpdateDeliveryComponent\";\nimport Updatecount from './Updatecount';\nimport ProductApproval from './ProductApproval';\nimport DeleteProduct from './DeleteProduct';\nimport ExportExcel from './ExportExcel';\nimport ExportPdf from '../ExportPdf';\n\nclass SideBar extends React.Component\n{\n    render()\n    {\n        return(<div>\n            <Router>\n            <div className=\"sidenav\">\n                <NavLink exact to=\"/AddProduct\">Add Product</NavLink>   \n                <NavLink exact to=\"/ManageProduct\"> Update Products</NavLink>\n                <NavLink exact to=\"/DeleteProduct\"> Delete Products</NavLink>\n                <NavLink exact to=\"/ProductApproval\"> Manage Orders</NavLink>  \n                <NavLink exact to=\"/AddDeliveryStatus\"> Add Delivery Status</NavLink>\n                <NavLink exact to=\"/UpdateDeliveryStatus\">Update Delivery Status</NavLink>\n                <NavLink exact to=\"/ExportExcel\" >Export To Excel <i class=\"fa fa-file-excel-o\" aria-hidden=\"true\"></i> </NavLink>\n                <NavLink exact to=\"/src/ExportPdf\">Export To Pdf <i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i></NavLink>\n            </div>\n            <div className=\"main\">\n                <Route path=\"/AddProduct\" component={AddProduct}></Route>\n                <Route path=\"/ManageProduct\" component={ManageProduct}></Route>\n                <Route path=\"/ProductApproval\" component={ProductApproval}></Route>\n                <Route path=\"/AddDeliveryStatus\" component={AddDeliveryStatus}></Route>\n                <Route path=\"/UpdateDeliveryStatus\" component={UpdateDeliveryStatus}></Route>\n                <Route path=\"/Bookings\" component={AddReview}></Route>\n                <Route path=\"/AddDeliveryComponent/:id\" component={AddDeliveryComponent}></Route>\n                <Route path=\"/UpdateDeliveryComponent/:id\" component={UpdateDeliveryComponent}></Route>\n                <Route path=\"/DeleteProduct\" component={DeleteProduct}></Route>\n                <Route path=\"/Updatecount/:id\" component={Updatecount}></Route>\n                <Route path=\"/ExportExcel\" component={ExportExcel}></Route>\n                <Route path=\"/src/ExportPdf\" component={ExportPdf}></Route>\n            </div>\n            </Router>\n        </div>)\n        \n    }\n}\n\nexport default SideBar;","E:\\Module3\\Integrated\\SBS\\src\\components\\ViewBooking.js",["171","172","173"],"import React from \"react\"\r\nimport axios  from \"axios\";\r\nimport {BrowserRouter as Router,Route,Link ,NavLink} \r\nfrom \"react-router-dom\";\r\nclass ViewBooking extends React.Component\r\n{\r\n     constructor(props)\r\n    {\r\n        super(props);    \r\n        this.state={AllBooking:[],errMsg:\"\"}  \r\n       \r\n    }\r\n    componentDidMount()\r\n    {\r\n        console.log(\" In ShowAllEmpComponent  componentDidMount  excecuted\");\r\n        axios.get(\" http://localhost:2211/productbooking\")       \r\n        .then((responseBooking)=>{console.log(responseBooking);\r\n        this.setState({AllBooking:responseBooking.data})\r\n        })\r\n        .catch((error)=>{console.log(\"Some error in product booking \");\r\n         this.setState({errMsg:\"Error In product booking\"})})\r\n\r\n    }\r\n    render()\r\n    {  \r\n        var bookingList=this.state.AllBooking.map(\r\n            (booking,index)=>\r\n            {\r\n              return (<tr  key={booking.bookingId}>\r\n                  <td>{booking.product.productName}</td>\r\n                  <td>{booking.product.productPrice}</td>\r\n                  <td>{booking.productQuantity}</td>\r\n                  <td>{booking.address}{booking.city}</td>\r\n                  <td>{booking.state}</td>\r\n                  <td>{booking.zipcode}</td>\r\n                  <td> <NavLink exact  to={`/DeleteBooking/${booking.bookingId}`} button className=\"mr-4 btn btn-success\">Booking Cancel</NavLink></td>\r\n                         \r\n                  </tr>)\r\n            }\r\n       );\r\n    return( \r\n        <div className=\"py-4\">\r\n             \r\n            <table class=\"table table-striped table-hover\"  border=\"3\">\r\n            \r\n            <tr class=\"tr_top\">\r\n                <td colspan = \"7\"> <h2 align=\"center\" padding=\"200px\"> All Bookings </h2></td>\r\n\r\n            </tr>\r\n            <tr> \r\n                <th>Product Name</th>\r\n                <th>Product Price</th>\r\n                <th>Product Quantity</th>\r\n                <th>Address</th> \r\n                <th>State</th> \r\n                <th>Zipcode</th>   \r\n                <th>Action</th>            \r\n            </tr>  \r\n               { bookingList} \r\n            </table>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default ViewBooking;\r\n","E:\\Module3\\Integrated\\SBS\\src\\components\\AddDeliveryStatus.js",[],"E:\\Module3\\Integrated\\SBS\\src\\components\\AddReview.js",["174","175","176","177"],"import React from \"react\";\r\nimport axios  from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Form, Button ,Link} from 'react-bootstrap';\r\n\r\nclass AddReview extends React.Component\r\n{   \r\n  \r\n  state = {\r\n         reviewComment: \"\",\r\n         ratingNumber: \"\",\r\n         product: [],\r\n         userId:1,\r\n         productId:\"\",\r\n         login:[]\r\n          \r\n      };\r\n\r\n      componentDidMount() {\r\n            axios.get(`http://localhost:2211/product/${this.props.match.params.id}`).then((responseData) => {\r\n                console.log(responseData);\r\n                this.setState({ product: responseData.data })\r\n        \r\n            }).catch((error) => {\r\n                console.log(\"Some error in reading the data \");\r\n                this.setState({ errMsg: \"Error In Reading product Data\" })\r\n            })\r\n            // alert(`${this.state.product.productId}`)\r\n            this.handleChange=this.handleChange.bind(this);\r\n            this.handleSubmit=this.handleSubmit.bind(this);\r\n        }\r\n  handleChange(event)\r\n       {   \r\n          this.setState({\r\n          ...this.state,\r\n          [event.target.name] : event.target.value\r\n          })\r\n          console.log(this.state.reviewComment);\r\n       }\r\n\r\n  handleSubmit = async (event) => \r\n     {\r\n        event.preventDefault();\r\n        let AllData= {\r\n        reviewComment: this.state.reviewComment,\r\n        ratingNumber: this.state.ratingNumber,\r\n        product: {\r\n        productId: this.state.product.productId,\r\n        },\r\n        login: {\r\n        userId:1,\r\n\r\n        },\r\n       };\r\n\r\n    //    =====================================U have not purchased this product==========\r\n\r\n    await axios\r\n      .post(\"http://localhost:2211/review\", AllData)\r\n      .then((data) => {})\r\n      .catch((error) => {\r\n      alert(error.response.data.error);\r\n      });\r\n      alert(\"Your Review has Added\");\r\n      this.props.history.push(\"/ShowAllProduct\")\r\n      console.log(this.state.product.productId);\r\n      // console.log(this.state.product);\r\n      // console.log(this.state.login);\r\n      };\r\n\r\n\r\n    render()\r\n    {  \r\n      \r\n    return(     \r\n    <div className= \"container-sm  mt-5 pd-4\">  \r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n               <h4>Add Review </h4>\r\n            </div>\r\n            <div class=\"card-body\"></div>\r\n            <form className=\"row g-3\" onSubmit={this.handleSubmit}  >\r\n                   <label for=\"reviewComment\" className=\"form-label\">Enter your Comment</label>\r\n                   <input type=\"text\" className=\"form-control\" id=\"reviewComment\" name=\"reviewComment\"  placeholder=\"Enter Your Comment\" onChange={this.handleChange} required pattern=\"[A-Za-z0-9\\s]+\"/>\r\n                   <label for=\"ratingNumber\" className=\"form-label\">Enter Rating Number</label>\r\n                   <input type=\"number\" className=\"form-control\" id=\"ratingNumber\"name=\"ratingNumber\" placeholder=\"Enter Your Rating\" onChange={this.handleChange} required min=\"1\" max=\"5\"/>      \r\n              <div className =\"col-2\">\r\n                   <button className=\"btn btn-primary\"   type=\"submit\">Add Review</button>\r\n              </div>      \r\n            </form>\r\n         </div>\r\n        </div>\r\n  \r\n        )\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default AddReview;","E:\\Module3\\Integrated\\SBS\\src\\components\\UpdateDeliveryStatus.js",[],"E:\\Module3\\Integrated\\SBS\\src\\components\\DeleteBooking.js",["178","179","180"],"\r\nimport React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport SearchBox from './SearchBox';\r\n\r\nimport axios from \"axios\";\r\nclass DeleteBooking extends React.Component\r\n{\r\n     constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product_booking: [],\r\n            errMsg: \"\"\r\n        }\r\n       \r\n      \r\n    }\r\n    componentDidMount() {\r\n        axios.get(`http://localhost:2211/productbooking/`).then((responseData) => {\r\n            console.log(responseData);\r\n            this.setState({ product_booking: responseData.data })\r\n\r\n        }).catch((error) => {\r\n            console.log(\"Some error in reading the data \");\r\n            this.setState({ errMsg: \"Error In Reading product Data\" })\r\n        })\r\n    }\r\n\r\n\r\n    delete = (id) => {//(id){\r\n      alert(id)\r\n      // axios.get(`http://localhost:2211/product/${id}`).then((responseData) => {\r\n      //     console.log(responseData);\r\n      //     this.setState({ product: responseData.data })\r\n\r\n      // }).catch((error) => {\r\n      //     console.log(\"Some error in reading the data \");\r\n      //     this.setState({ errMsg: \"Error In Reading product Data\" })\r\n      // })\r\n      console.log(this.state.product_booking)\r\n      for(const product_booking of this.state.product_booking){\r\n      \r\n          if(product_booking.bookingId == id){\r\n              console.log(product_booking);\r\n              const url =`http://localhost:2211/productbooking/delete/`;\r\n              axios.put((url),{ ...product_booking })\r\n              .then((responseData) => {\r\n                          console.log(responseData);\r\n                    alert(\"Booking Cancel Successfully!\")\r\n                    this.props.history.push(\"./ViewBooking\")\r\n              })\r\n              .catch((error) => {\r\n                  console.log(error);\r\n                  console.log(\"Some error in updating product data\");\r\n              })\r\n       \r\n              break;\r\n          }\r\n      }\r\n      axios.get(`http://localhost:2211/productbooking`).then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState({ product_booking: responseData.data })\r\n\r\n      }).catch((error) => {\r\n          console.log(\"Some error in reading the data \");\r\n          this.setState({ errMsg: \"Error In Reading product Data\" })\r\n      })\r\n}\r\nrender()\r\n{  \r\n    var bookingList=this.state.product_booking.map(\r\n        (booking,index)=>\r\n        {\r\n          return (<tr  key={booking.bookingId}>\r\n              <td>{booking.product.productName}</td>\r\n              <td>{booking.product.productPrice}</td>\r\n              <td>{booking.productQuantity}</td>\r\n              <td>{booking.address}{booking.city}</td>\r\n              <td>{booking.state}</td>\r\n              <td>{booking.zipcode}</td>\r\n              <td>\r\n              <button type=\"submit\" className=\"mr-4 btn btn-success\" onClick = {() => {this.delete(`${booking.bookingId}`)}}>Booking Cancel</button>  \r\n                </td>\r\n              \r\n                     \r\n              </tr>)\r\n        }\r\n   );\r\nreturn( \r\n    <div className=\"py-4\">\r\n         \r\n        <table class=\"table table-striped table-hover\"  border=\"3\">\r\n        \r\n        <tr class=\"tr_top\">\r\n            <td colspan = \"7\"> <h2 align=\"center\" padding=\"200px\"> All Bookings </h2></td>\r\n\r\n        </tr>\r\n        <tr> \r\n            <th>Product Name</th>\r\n            <th>Product Price</th>\r\n            <th>Product Quantity</th>\r\n            <th>Address</th> \r\n            <th>State</th> \r\n            <th>Zipcode</th>   \r\n            <th>Action</th>            \r\n        </tr>  \r\n           { bookingList} \r\n        </table>\r\n    </div>\r\n    )\r\n}\r\n}\r\nexport default DeleteBooking;\r\n","E:\\Module3\\Integrated\\SBS\\src\\components\\UpdateReview.js",["181","182","183"],"import React from \"react\";\r\nimport axios  from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button ,Link} from 'react-bootstrap';\r\n\r\nclass UpdateReview extends React.Component\r\n{   \r\n  constructor(props)\r\n    {\r\n        super(props); \r\n        this.state={AllReviewData:[],\r\n          reviewComment:\"\",\r\n          ratingNumber:0,\r\n\r\n          productName:\"\",\r\n          product:[],\r\n\r\n        }\r\n        this.changeComment = this.changeComment.bind(this);\r\n        this.ratingNumber= this.ratingNumber.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this) ;\r\n    }\r\n\r\n    componentDidMount()\r\n   {\r\n        console.log(this.props.match.params.id);\r\n        axios.get(`http://localhost:2211/review/${this.props.match.params.id}`)\r\n        .then((responseReviewData)=>{console.log(responseReviewData);\r\n            this.setState({AllReviewData:responseReviewData.data\r\n\r\n            \r\n            })\r\n          console.log(this.state.AllReviewData);\r\n        })\r\n        .catch((error)=>{console.log(error);\r\n        this.setState({errMsg:\"Error In Reading Review Data\"})} );       \r\n   }\r\n   changeComment(event)\r\n   {   \r\n        this.setState({\r\n        reviewComment:event.target.value\r\n        } )\r\n        console.log(this.state.AllReviewData.reviewComment); \r\n   }\r\n   ratingNumber(event)\r\n   {   \r\n        this.setState({\r\n        ratingNumber:event.target.value\r\n        } )\r\n        console.log(this.state.AllReviewData.ratingNumber);\r\n   }\r\n\r\n   handleSubmit = (event)=>\r\n   {\r\n    //event.preventDefault();\r\n    \r\n     console.log(`http://localhost:2211/review/update1/`);\r\n     axios.put(`http://localhost:2211/review/update1/`, {\r\n     reviewId:this.state.AllReviewData.reviewId,\r\n     reviewComment:this.state.reviewComment,\r\n     ratingNumber:this.state.ratingNumber\r\n     \r\n   })\r\n      .then((response)=> {\r\n        console.log(response);\r\n        // this.props.history.push(\"/ShowAllProduct\");\r\n      })\r\n      .catch((error) =>{\r\n        // alert(\"You have not updated your review\");\r\n        this.props.history.push(\"/ShowAllProduct\");\r\n \r\n         alert(error.response.data.message);\r\n         \r\n        console.log(error);\r\n        console.log(\"Some error in updating Review\");\r\n      })\r\n      // alert(\"Your Review has Updated\");\r\n       this.props.history.push(\"/ShowAllProduct\");\r\n      //console.log(this.state.AllReviewData.product);\r\n      //console.log(this.state.AllReviewData.product.productName);\r\n\r\n}\r\n  render()\r\n    {  \r\n      // var ProductList=this.state.AllReviewData\r\n      // .map(\r\n      //   (productList,index)=>{\r\n      //     {productList.product.productName}\r\n\r\n      //   })\r\n      //   var ProdName = ProductList[0];\r\n\r\n      return( \r\n\r\n         <div className= \"container-sm  mt-5 pd-4\">  \r\n            <div class=\"card\">\r\n               <div class=\"card-header\">\r\n                 <h4>Update  Review</h4>\r\n               </div>\r\n\r\n            <div class=\"card-body\">\r\n                <form className=\"row g-3\">\r\n                <label for=\"reviewId\" className=\"form-label\">Review Id</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"reviewId\" name=\"reviewId\" value={this.state.AllReviewData.reviewId}   readOnly/>\r\n                \r\n                   <label for=\"reviewComment\" className=\"form-label\">Enter your Comment</label>\r\n                   <input type=\"text\" className=\"form-control\" id=\"reviewComment\" name=\"reviewComment\"  placeholder={this.state.AllReviewData.reviewComment} onChange={this.changeComment} required pattern=\"[A-Za-z0-9\\s]+\"/>\r\n                   <label for=\"ratingNumber\" className=\"form-label\">Enter Rating Number</label>\r\n                   <input type=\"number\" className=\"form-control\" id=\"ratingNumber\"name=\"ratingNumber\" placeholder={this.state.AllReviewData.ratingNumber} onChange={this.ratingNumber} required min=\"1\" max=\"5\"/>      \r\n                   <div className =\"col-2\">\r\n                   <button className=\"btn btn-success\" onClick={this.handleSubmit}  type=\"submit\">Update</button>\r\n                   </div>      \r\n               </form>\r\n          </div>\r\n        \r\n        </div>\r\n     </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default UpdateReview;","E:\\Module3\\Integrated\\SBS\\src\\components\\ViewDeliveryStatus.js",[],"E:\\Module3\\Integrated\\SBS\\src\\components\\ShowReviews.js",["184","185","186"],"import React from \"react\";\r\nimport axios  from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button ,Link,NavLink} from 'react-router-dom';\r\n\r\nclass ShowReviews extends React.Component\r\n{   \r\n  //  state = { review: { login: {},product: {},},};\r\n  constructor(props)\r\n  {\r\n      super(props);    \r\n      this.state={AllBooking:[],errMsg:\"\"} ;\r\n  }   \r\n  \r\n  componentDidMount(){\r\n    axios.get(`http://localhost:2211/review/product/${this.props.match.params.id}`).then((responseData) => {\r\n            console.log(responseData);\r\n            this.setState({ AllBooking: responseData.data })\r\n            // console.log(product.productId);\r\n\r\n        }).catch((error) => {\r\n            console.log(\"Some error in reading the data \");\r\n            this.setState({ errMsg: \"Error In Reading product Data\" })\r\n        })\r\n        \r\n\r\n  }\r\n    render()\r\n    {\r\n      // var prodList = this.state.AllBooking; \r\n      // var p = prodList[0].product.productId ;\r\n       var ProductList=this.state.AllBooking\r\n      .map(\r\n        (productList,index)=>{\r\n          return(\r\n            <div key={productList.id}>\r\n              <h1 align=\"left\">Name : {productList.product.productName}</h1>\r\n              <h1 align=\"left\">Brand Name : {productList.product.productBrand}</h1>\r\n              <h1 align=\"left\">Model Name : {productList.product.productModel}</h1>\r\n              <h1 align=\"left\">Price : {productList.product.productPrice} Rs.</h1>\r\n            </div>\r\n          )\r\n        }\r\n\r\n      )\r\n      var product1=ProductList[0];\r\n      // var prodId=product1[Object.keys(product1)[0]];\r\n      // var prodId = product1.productId;\r\n\r\n      // var ProductList2=this.state.AllBooking.map(\r\n      //   (productList2,index)=>{\r\n      //     return(\r\n      //       <div key={productList2.id}>\r\n              \r\n      //       </div>\r\n      //     )\r\n      //   }\r\n     \r\n      // )\r\n      \r\n      var ReviewList=this.state.AllBooking.map(\r\n      (reviewList,index)=>\r\n       {\r\n        return (<tr key={reviewList.reviewId}>\r\n          <td>{reviewList.login.username}</td>\r\n          <td>{reviewList.reviewComment}</td>\r\n          {/* <td>{reviewList.product.productId}</td> */}\r\n          <td>{reviewList.ratingNumber}</td>\r\n          <td><NavLink exact to={`/UpdateReview/${reviewList.reviewId}`} type=\"button\">Update</NavLink></td>\r\n          </tr>)\r\n          // {`/ShowReviews/${prod.productId}`}\r\n        }\r\n     );\r\n        return( \r\n          <div className=\"container-sm\">\r\n         {product1}\r\n          <div>\r\n          </div>\r\n         <div className=\"container-sm\">\r\n          <div>\r\n\r\n            <div className=\"py-4\">\r\n            <table class=\"table border shadow\" >\r\n            <thead class=\"thead-dark\">\r\n              <h4   backgroung-color=\"black\" align=\"center\" padding=\"200px\" > All Reviews</h4>  \r\n              <h4 align=\"left\"> &nbsp;&nbsp;&nbsp;OverAll Review is: 3</h4>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n             \r\n            </thead>\r\n              <tbody> \r\n            <table border=\"1\" class=\"table border shadow\">  \r\n            <tr>\r\n                <th scope=\"col\" className = \"bg-dark text-white\">UserName</th>\r\n                <th scope=\"col\" className = \"bg-dark text-white\">Comment</th>\r\n               <th scope=\"col\" className = \"bg-dark text-white\">Rating</th>  \r\n               <th scope=\"col\" className = \"bg-dark text-white\">Action</th>     \r\n            </tr>  \r\n            { ReviewList.reverse()}\r\n            </table> \r\n            </tbody>  \r\n            </table>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n        )\r\n      \r\n    }\r\n    \r\n}\r\n\r\nexport default ShowReviews;","E:\\Module3\\Integrated\\SBS\\src\\components\\login.js",[],"E:\\Module3\\Integrated\\SBS\\src\\components\\UpdateDeliveryComponent.js",["187","188"],"import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button} from 'react-bootstrap';\r\n\r\nexport class UpdateDeliveryComponent extends Component\r\n{\r\n  constructor(props)\r\n    {\r\n        super(props); \r\n        this.state={AllDeliveryData:[],\r\n          delieveryStatus:\"\"\r\n\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n   \r\ncomponentDidMount()\r\n{\r\n        console.log(this.props.match.params.id);\r\n        axios.get(`http://localhost:2211/deliverytracking/id/${this.props.match.params.id}`)\r\n        .then((responseDeliveryData)=>{console.log(responseDeliveryData);\r\n            this.setState({AllDeliveryData:responseDeliveryData.data\r\n\r\n            \r\n            })\r\n          console.log(this.state.AllDeliveryData);\r\n        })\r\n\r\n      \r\n        .catch((error)=>{console.log(error);\r\n        this.setState({errMsg:\"Error In Reading delivery Data\"})} );\r\n        \r\n       \r\n}\r\nhandleChange(event)\r\n{   \r\n  this.setState({\r\n    delieveryStatus:event.target.value\r\n  } )\r\n  console.log(this.state.AllDeliveryData.delieveryStatus);\r\n}\r\nhandleSubmit = (event)=>{\r\n    //event.preventDefault();\r\n    console.log(`http://localhost:2211/deliverytracking/`);\r\n    axios.put(`http://localhost:2211/deliverytracking/`, {\r\n       deliveryTrackingId:this.state.AllDeliveryData.deliveryTrackingId,\r\n       delieveryStatus:this.state.delieveryStatus\r\n      })\r\n      .then((response)=> {\r\n        console.log(response);\r\n      })\r\n      .catch((error) =>{\r\n        console.log(error);\r\n        console.log(\"Some error in updating Delivery Status\");\r\n        alert(error.response.data.message);\r\n      })\r\n\r\n}\r\n    render()\r\n    {\r\n      return(\r\n        \r\n        <div className= \"container-sm mt-4 pd-4\">  \r\n            <div class=\"card\">\r\n              <div class=\"card-header\">\r\n                <h4>Update Delivery Status </h4>\r\n              </div>\r\n              <div class=\"card-body\"></div> \r\n        \r\n        <form>\r\n                    \r\n          <label for=\"deliveryTrackingId\" className=\"form-label\">Delivery ID</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"deliveryTrackingId\" value={this.state.AllDeliveryData.deliveryTrackingId} name=\"deliveryTrackingId\" readOnly/>\r\n          <label for=\"delieveryStatus\" className=\"form-label\">Delivery Status</label>\r\n          <input type=\"text\" placeholder={this.state.AllDeliveryData.delieveryStatus} name=\"delieveryStatus\" className=\"form-control\" id=\"delieveryStatus\" onChange={this.handleChange} required/>\r\n          <br></br>\r\n          <button className=\"btn btn-success\" type=\"submit\" onClick={this.handleSubmit}>Update</button>\r\n        </form>\r\n    </div>\r\n    </div>)\r\n  }\r\n\r\n}\r\nexport default UpdateDeliveryComponent;","E:\\Module3\\Integrated\\SBS\\src\\components\\AddDeliveryComponent.js",[],"E:\\Module3\\Integrated\\SBS\\src\\components\\AddProduct.js",["189","190"],"import React from 'react';\nimport axios from \"axios\";\n//import {BrowserRouter as Router,Route,Link ,NavLink} \n//from \"react-router-dom\";\n//import axios from \"axios\";\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n  function isvalid(val) {\n    let  validProductFieldName = RegExp('[A-Za-z0-9\\s]+');\n    if(validProductFieldName.test(val)){\n      return true;\n    }\n    else{\n        return false;\n    }\n }\n\n//  const validProductFieldName = RegExp('[A-Za-z0-9\\s]+');\n\n//  const validateForm = errorMessage => {\n//     let valid = true;\n//     Object.values(errorMessage).forEach(val => val.length > 0 && (valid = false));\n//     return valid;\n//   };\n\nclass AddProduct extends React.Component\n{   \n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            productName :\"\",\n            productModel : \"\",\n            productBrand : \"\",\n            productPrice : {},\n            productCount : {},\n            productCreatedAt : null,\n            productDeletedAt : null,\n            productUpdatedAt : null,\n            productDeletedFlag : 'N',\n            errors:{\n                productName :\"\",\n                productModel : \"\",\n                productBrand : \"\",\n                productPrice : \"\",\n                productCount : \"\",\n            }\n        } \n        this.handleChange=this.handleChange.bind(this) ;\n    }\n\n    handleChange(event)\n    {   \n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n    \n    switch (name) {\n        case 'productName': \n            errors.productName = \n            value.length <2\n            ? 'Product Name must be 2 characters long!'\n            : '';\n        break;\n        case 'productModel': \n        errors.productModel = \n            value.length <2\n            ? 'Product Name must be 2 characters long!'\n            : '';\n        break;\n        case 'productBrand': \n        errors.productBrand = \n            value.length <2\n            ? 'Product Name must be 2 characters long!'\n            : '';\n        break;\n        case 'productPrice': \n        errors.productPrice = \n            value.length ===0\n            ? 'Product Price cannot be null or 0!'\n            : '';\n        break;\n        case 'productCount': \n        errors.productCount = \n            value.length ===0\n            ? 'Product Price cannot be null or 0!'\n            : '';\n        break;\n        default:\n        break;\n     }\n\n        this.setState({errors, [name]: value}, ()=> {\n            console.log(errors)\n        });\n\n        this.setState({\n            ...this.state,\n            [event.target.name] : event.target.value\n        })\n    }\n\n    handleSubmit = (event)=>{\n        event.preventDefault();\n        console.log(this.state.productCount)\n        if(this.state.productName === null || this.state.productBrand === null || this.state.productModel ===null ||\n            this.state.productPrice.length === 0 || this.state.productCount.length === 0)\n          {     \n              \n              alert(\"All Field are mandatory\")\n          }\n        else if(this.state.productName.length === 0)\n        {\n            alert(\"Product Name is Mandtory Field\")\n        }\n        else if(this.state.productName.length < 2)\n        {\n            alert(\"Product Name must be 2 characters long!\")\n        }\n        else if(this.state.productBrand.length === 0)\n        {\n            alert(\"Product Brand is Mandtory Field\")\n        }\n        else if(this.state.productBrand.length < 2)\n        {\n            alert(\"Product Brand must be 2 characters long!\")\n        }\n        else if(this.state.productModel.length === 0)\n        {\n            alert(\"Product Model is Mandtory Field\")\n        }\n        else if(this.state.productModel.length < 2)\n        {\n            alert(\"Product Model must be 2 characters long!\")\n        }\n        // else if(isvalid(this.state.productName) || isvalid(this.state.productModel) || isvalid(this.state.productBrand))\n        // {\n        //     alert(\"Product Name,Model and Brand can contain characters and digits only\")\n        // }\n       else\n       {\n        axios.post(`http://localhost:2211/product`, {\n            productName: this.state.productName,\n            productModel: this.state.productModel,\n            productBrand: this.state.productBrand,\n            productPrice: this.state.productPrice,\n            productCount: this.state.productCount,\n          })\n          .then(function (response) {\n            console.log(response);\n            alert(\"Product is added successfully\");\n          })\n          .then(\n              ()=>{\n                  this.setState( {\n                    productName :\"\",\n                    productModel : \"\",\n                    productBrand : \"\",\n                    productPrice : {},\n                    productCount : {},\n                    productCreatedAt : null,\n                    productDeletedAt : null,\n                    productUpdatedAt : null,\n                    productDeletedFlag : 'N',\n                } )\n              }\n          )\n          .catch(function (error) {\n             alert(\"Some thing went wrong !.. 'Invalid Data or network issue'\")\n          })\n        }\n     \n    }\n\n    render(){\n\n        return(\n        <div className= \"mt-4\">\n            <div className=\"card\">\n                <div className=\"card-header\">\n                   <h4>Add Product </h4> \n                </div>\n                <div className=\"card-body\">\n                    <form className=\"row g-3\">\n                        <div className=\"col-md-6\">\n                            <label for=\"productName\" className=\"form-label\">Product Name</label>\n                            <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            id=\"productName\" \n                            required \n                            pattern=\"[A-Za-z0-9\\s]+\"\n                            name=\"productName\"\n                            value = {this.state.productName}\n                            onChange={this.handleChange}\n                            />\n                            <div>{this.state.errors.productName}</div>\n                        </div>\n                        \n                        <div className=\"col-md-6\">\n                            <label for=\"productModel\" className=\"form-label\">Model Name</label>\n                            <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            id=\"productModel\" \n                            required \n                            pattern=\"[A-Za-z0-9\\s]+\"\n                            name=\"productModel\"\n                            value = {this.state.productModel}\n                            onChange={this.handleChange}\n                            />\n                            <div>{this.state.errors.productModel}</div>\n                        </div>\n                       \n                        <div className=\"col-md-6\">\n                            <label for=\"productBrand\" className=\"form-label\">Brand Name</label>\n                            <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            id=\"productBrand\" \n                            required \n                            pattern=\"[A-Za-z0-9\\s]+\"\n                            name=\"productBrand\"\n                            value = {this.state.productBrand}\n                            onChange={this.handleChange}\n                            />\n                             <div>{this.state.errors.productBrand}</div>\n                        </div>\n                       \n                        <div className=\"col-md-6\">\n                            <label for=\"productCount\" className=\"form-label\">Available Count</label>\n                            <input \n                            type=\"number\" \n                            className=\"form-control\" \n                            id=\"productCount\" \n                            required\n                            name=\"productCount\"\n                            value = {this.state.productCount}\n                            onChange={this.handleChange}\n                            />\n                             <div>{this.state.errors.productCount}</div>\n                        </div>\n                       \n                        <div className=\"col-md-6 mb-4\">\n                            <label for=\"productPrice\" className=\"form-label\">Product Price</label>\n                            <input \n                            type=\"number\" \n                            className=\"form-control\" \n                            id=\"productPrice\" \n                            required\n                            name=\"productPrice\"\n                            value = {this.state.productPrice}\n                            onChange={this.handleChange}\n                            />\n                             <div>{this.state.errors.productPrice}</div>\n                        </div>\n                       \n                        <div className=\"col-12\">\n                            <div className=\"row\">\n                                <div className =\"col-2\">\n                                    <button className=\"btn btn-success\" type=\"submit\" onClick={this.handleSubmit}>Submit</button>\n                                </div>\n                                <div className =\"col-2\">\n                                    <button className=\"btn btn-dark\" type=\"reset\">Reset</button>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\n\nexport default AddProduct;","E:\\Module3\\Integrated\\SBS\\src\\components\\ManageProduct.js",["191"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport SearchBox from './SearchBox';\n\n//import {BrowserRouter as Router,Route,Link ,NavLink} \n//from \"react-router-dom\";\nimport axios from \"axios\";\nimport  ReactPaginate from 'react-paginate';\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nclass ManageProduct extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            offset: 0,\n            perPage: 5,\n            currentPage: 0,\n            searchField: '',   \n            orgtableData: [],         \n            product: [],\n            errMsg: \"\"\n        }\n\n        this.handlePageClick = this.handlePageClick.bind(this);\n    }\n\n    handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }, () => {\n            this.loadMoreData()\n        });\n\n    };\n\n    loadMoreData() {\n\t\tconst data = this.state.orgtableData;\n\t\t\n\t\tconst slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n\t\tthis.setState({\n\t\t\tpageCount: Math.ceil(data.length / this.state.perPage),\n\t\t\tproduct:slice\n\t\t})\n\t\n    }\n\n    componentDidMount() {\n        axios.get(`http://localhost:2211/product/allproduct`).then((responseData) => {\n            console.log(responseData);\n            var data = responseData.data;\n\t\t\t\t\n            var slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n\n            this.setState({\n                pageCount: Math.ceil(data.length / this.state.perPage),\n                    orgtableData :responseData.data,\n                 product: slice \n                })\nconsole.log(data);\n        }).catch((error) => {\n            console.log(\"Some error in reading the data \");\n            this.setState({ errMsg: \"Error In Reading product Data\" })\n        })\n    }\n\n\n\n    render() {\n        \n\n        const { product, searchField } = this.state;\n        var filteredData = product.filter(productData => {\n    \n            if (productData.productName.toLowerCase().includes(searchField.toLowerCase())) {\n                return productData;\n\n            }\n            else if (productData.productBrand.toLowerCase().includes(searchField.toLowerCase())) {\n                return productData;\n\n            }\n            else if (productData.productModel.toLowerCase().includes(searchField.toLowerCase())) {\n                return productData;\n\n            }\n\n        })\n         \n            .map(\n                (productList, index) => {\n                    return (\n                        <tr key={productList.productId}>\n                            <td> {productList.productName} </td>\n                            <td>{productList.productBrand} </td>\n                            <td> {productList.productModel}</td>\n                            <td> {productList.productCount}</td>\n                            <td> {productList.productPrice}</td>\n                            <td>\n                                <NavLink exact to={`/Updatecount/${productList.productId}`} button className=\"mr-4 btn btn-success\">Update</NavLink>\n                            </td>\n                        </tr>\n\n\n                    )\n                }\n            );\n\n        return (\n            <div>\n\n\n                <h1>List Of Products</h1>\n                \n\n                <table class=\"table table-striped table-hover\" border=\"2\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col md-2\" className=\"bg-dark text-white\">Product Name</th>\n                            <th scope=\"col md-2\" className=\"bg-dark text-white\">Brand Name</th>\n                            <th scope=\"col md-2\" className=\"bg-dark text-white\">Model Name</th>\n                            <th scope=\"col md-2\" className=\"bg-dark text-white\">Price</th>\n                            <th scope=\"col md-2\" className=\"bg-dark text-white\">Available Count</th>\n                            <th scope=\"col md-2\" className=\"bg-dark text-white\">Action</th>\n                        </tr>\n\n                    </thead>\n\n                    <tbody>\n                        <tr>\n\n                            <td>\n\n                                <SearchBox placeholder=\"Product Name\" id=\"form1\" class=\"form-control\" handleChange={(e) => this.setState({ searchField: e.target.value })} />\n\n                            </td>\n                             <td>\n                                <SearchBox placeholder=\"Brand Name\" handleChange={(e) => this.setState({ searchField: e.target.value })} />\n                            </td>\n                            <td>\n                                <SearchBox placeholder=\"Model Name\" handleChange={(e) => this.setState({ searchField: e.target.value })} />\n                            </td>\n                            <td></td><td></td><td></td>\n\n                        </tr>\n                        {filteredData}\n\n\n                    </tbody>\n                </table>\n                <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={this.state.pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={this.handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/>\n            </div>\n        )\n    }\n\n}\n\nexport default ManageProduct;","E:\\Module3\\Integrated\\SBS\\src\\components\\ProductApproval.js",["192","193","194"],"import React,{Component} from 'react';\r\nimport axios  from \"axios\";\r\n\r\nclass ProductApproval extends Component{\r\n  constructor(props)\r\n  {\r\n        super(props); \r\n        this.state={product_booking:[],errMsg:\"\"};\r\n    //this.handleChange= this.handleChange.bind(this);\r\n    this.handleCancel=this.handleCancel.bind(this) ;\r\n    this.handleConfirm=this.handleConfirm.bind(this);\r\n    this.handleUpdate=this.handleUpdate.bind(this);\r\n\r\n  }\r\n//==========================GET ALL BOOKINGS==============================================================================================================\r\n  componentDidMount()\r\n  {\r\n        console.log(\" Add productApproval componentDidMount excecuted\");\r\n        axios.get(`http://localhost:2211/productbooking`)\r\n        .then((responseBookingData)=>{console.log(responseBookingData);\r\n        this.setState({product_booking:responseBookingData.data,}) })\r\n        .catch((error)=>{console.log(\"Some error in productApproval read data \");\r\n      })\r\n  }\r\n\r\n  homePage = (event) => {\r\n      this.props.history.push(\"/ProductApproval\");\r\n  };\r\n\r\n//=========================CANCEL BOOKING====================================================================================================================\r\n  \r\n  handleCancel =(id) =>{\r\n    alert(id)\r\n    console.log(this.state.product_booking)\r\n    for(const product_booking of this.state.product_booking){\r\n    if(product_booking.bookingId == id){\r\n       \r\n        \r\n        console.log(product_booking);\r\n        const url =`http://localhost:2211/CancelBooking/`;\r\n        axios.put((url),{ ...product_booking})\r\n        .then((responseData) => {\r\n                    console.log(responseData);\r\n            alert(\"BOOKING CANCEL SUCCESSFULLY\")\r\n            this.props.history.push(\"/ProductApproval\")\r\n        })\r\n        .catch((error) => {\r\n          alert(error.response.data.message);\r\n       // .catch((error) => {\r\n         //   console.log(error);\r\n           // console.log(\"Some error in CancelBooking\");\r\n        })\r\n        break;\r\n    }\r\n  }\r\n}\r\n//==========================CONFORM BOOKING====================================================================================================================\r\n  \r\nhandleConfirm =(id) =>{\r\n  alert(id)\r\n  console.log(this.state.product_booking)\r\n  for(const product_booking of this.state.product_booking){\r\n    console.log(this.state.product_booking.bookingId)\r\n    if(product_booking.bookingId == id){\r\n      console.log(product_booking);\r\n      const url =`http://localhost:2211/ConformBooking/`;\r\n      axios.put((url),{ ...product_booking})\r\n      .then((responseData) => {\r\n                  console.log(responseData);\r\n         // alert(\"BOOKING CONFIRM SUCCESSFULLY\")\r\n          this.props.history.push(\"/ProductApproval\");\r\n    })\r\n    .catch((error) => {\r\n      alert(error.response.data.message);\r\n   // .catch((error) => {\r\n     //     console.log(error);\r\n       //   console.log(\"Some error in ConfirmBooking\");\r\n    })\r\n    break;\r\n  }\r\n  \r\n}\r\n}\r\n\r\n//=========================UPDATE BOOKING======================================================================================================================\r\n  \r\nhandleUpdate =(id) =>{\r\n  alert(id)\r\n  console.log(this.state.product_booking)\r\n  for(const product_booking of this.state.product_booking){\r\n  \r\n  if(product_booking.bookingId == id){\r\n      console.log(product_booking);\r\n\r\n      const url =`http://localhost:2211/UpdateBooking/`;\r\n      axios.put((url),{ ...product_booking})\r\n      .then((responseData) => {\r\n                  console.log(responseData);\r\n            //alert(\"BOOKING UPDTAED SUCCESSFULY!\")\r\n            this.props.history.push(\"/ProductApproval\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data.message);\r\n     // .catch((error) => {\r\n       //   console.log(error);\r\n         // console.log(\"Some error in UpdateBooking\");\r\n      })\r\n\r\n      break;\r\n  }\r\n \r\n}\r\n}  \r\n//============================================================================================================\r\n    \r\n    render()\r\n    {\r\n      var AllbookingList=this.state.product_booking.map(\r\n        (booking,index)=>\r\n        {\r\n        return (    \r\n            <tr key={booking.bookingId}>\r\n                  <td>{booking.bookingId}</td>\r\n                  <td>{booking.productQuantity}</td>\r\n                  <td>{booking.product.productId}</td>\r\n                  <td>{booking.product.productCount}</td>\r\n                  <td>{booking.approvalStatus}</td>\r\n                  <td><button className=\"btn btn-success\" type=\"button\" \r\n                      onClick={() => { this.handleConfirm(`${booking.bookingId}`) }}>CONFIRM </button></td>\r\n                  <td><button className=\"btn btn-danger\" type=\"button\" \r\n                      onClick={() => { this.handleCancel(`${booking.bookingId}`) }}>CANCEL </button></td>\r\n                  <td><button className=\"btn btn-primary\" type=\"button\" \r\n                      onClick={() => { this.handleUpdate(`${booking.bookingId}`) }}>UPDATE </button></td>\r\n            </tr>)\r\n        }\r\n    );\r\n        return( \r\n          <div className=\"py-4\">\r\n          <h2 align=\"center\" > All Product Bookings </h2>  \r\n          <table class=\"table table-striped table-hover\" border=\"2\">\r\n          <tr> \r\n              <th scope=\"col\" className = \"bg-dark text-white\" >Booking\r\n                                ID</th>\r\n              <th scope=\"col\" className = \"bg-dark text-white\" >Product\r\n                                Quantity</th>\r\n              <th scope=\"col\" className = \"bg-dark text-white\">Product\r\n                                Id</th> \r\n              <th scope=\"col\" className = \"bg-dark text-white\">Product\r\n                              Count</th>  \r\n              <th scope=\"col\" className = \"bg-dark text-white\">Approval\r\n                              Status</th>  \r\n              <th colSpan='3' className = \"bg-dark text-white\">Action</th>    \r\n          </tr>  \r\n             {AllbookingList}\r\n          </table>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\nexport default ProductApproval;\r\n\r\n\r\n\r\n\r\n","E:\\Module3\\Integrated\\SBS\\src\\components\\SearchBox.js",["195","196"],"import React from 'react';\n\nconst SearchBox = (props) =>{\n    return(\n<div class=\"form-outline\">\n\n\n  <input type='search'\n         className = 'search'\n         id=\"form1\" class=\"form-control\"\n         placeholder ={props.placeholder}\n         onChange ={props.handleChange}\n         id=\"form1\" class=\"form-control\"\n         \n        />\n</div>\n        \n    )\n\n}\n\nexport default SearchBox;","E:\\Module3\\Integrated\\SBS\\src\\components\\Updatecount.js",["197"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Updatecount extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productCount: \"\",\r\n            productPrice: \"\",\r\n            productCountError: \"\",\r\n            productPriceError: \"\",\r\n            product: []\r\n        }\r\n        this.changeProductCount = this.changeProductCount.bind(this);\r\n        this.changeProductPrice = this.changeProductPrice.bind(this);\r\n        this.update = this.update.bind(this);\r\n\r\n    }\r\n\r\n\r\n    changeProductCount(event) {\r\n        this.setState({\r\n            productCount: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    changeProductPrice(event) {\r\n        this.setState({\r\n            productPrice: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://localhost:2211/product/${this.props.match.params.id}`).then((responseData) => {\r\n            console.log(responseData);\r\n            this.setState({ product: responseData.data })\r\n\r\n        }).catch((error) => {\r\n            console.log(\"Some error in reading the data \");\r\n            this.setState({ errMsg: \"Error In Reading product Data\" })\r\n        })\r\n\r\n    }\r\n    update(event) {\r\n        if(this.state.productCount.trim()===\"\" && this.state.productPrice.trim()===\"\"){\r\n            this.setState({\r\n                productPriceError:\"invalid input\",\r\n                productCountError: \"invalid input \"\r\n            })\r\n\r\n        }\r\n        else if(this.state.productCount.trim()===\"\"){\r\n\r\n            this.setState({\r\n                productPriceError:\"\",\r\n                productCountError: \"invalid input \"\r\n            })\r\n\r\n        }\r\n        else if(this.state.productPrice.trim()===\"\"){\r\n\r\n            this.setState({\r\n                productPriceError:\"invalid input \",\r\n                productCountError: \"\"\r\n            })\r\n\r\n        }\r\n        else if (this.state.productPrice < 10) {\r\n            this.setState({\r\n                productPriceError: \"Price should be greater than 10\",\r\n                productCountError:\"\"\r\n            })\r\n            \r\n        }\r\n        else if (this.state.productCount < 0) {\r\n            this.setState({\r\n                productPriceError: \"\",\r\n                productCountError:\"Count cannot be in negative \"\r\n            })\r\n            \r\n        }\r\n        \r\n        \r\n        else {\r\n            console.log(\"productName\" + this.state.product.productName,\r\n                \"productModel\" + this.state.product.productBrand,\r\n                \"productBrand\" + this.state.product.productModel,\r\n                \"productPrice\" + this.state.productPrice,\r\n                \"productCount\" + this.state.productCount,\r\n                \"productUpdatedAt\" + \"2021-01-21T17:46:52.29678\"\r\n            )\r\n            const url = `http://localhost:2211/product/update/`;\r\n            axios.put(url, {\r\n                productName: this.state.product.productName,\r\n                productModel: this.state.product.productModel,\r\n                productBrand: this.state.product.productBrand,\r\n                productPrice: this.state.productPrice,\r\n                productCount: this.state.productCount,\r\n            }).then((responseEmpData) => {\r\n                console.log(responseEmpData);\r\n                alert(\"Updated Successfully\");\r\n                this.props.history.push(\"/ManageProduct\");\r\n            }).catch((error) => {\r\n                console.log(error);\r\n                console.log(\"Some error in updating product data\");\r\n            })\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n   \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-sm mt-4 pd-4\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <h4>Update Product Count & Price </h4>\r\n                    </div>\r\n                    <div class=\"card-body\"></div>\r\n                    <form>\r\n\r\n                        <div class=\"col-sm-5\">\r\n                            <label for=\"exampleFormControlInput1\" class=\"form-label\">Product Name</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"productName\" value={this.state.product.productName} readOnly />\r\n                            <p></p>\r\n\r\n                            <label for=\"exampleFormControlInput1\" class=\"form-label\">Brand Name</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"brandName\" value={this.state.product.productBrand} readOnly />\r\n                            <p></p>\r\n\r\n\r\n                            <label for=\"exampleFormControlInput1\" class=\"form-label\">Model Name</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"modelName\" value={this.state.product.productModel} readOnly />\r\n                            <p></p>\r\n\r\n                            <label for=\"exampleFormControlInput1\" class=\"form-label\">Product Count</label>\r\n                            <input type=\"number\" class=\"form-control\" id=\"productCount\" onChange={this.changeProductCount}\r\n                                placeholder=\"Product Count\" pattern=\"[0-9]\" required />\r\n\r\n                            <p>{this.state.productCountError}</p>\r\n                            <label for=\"exampleFormControlInput1\" class=\"form-label\">Product Price</label>\r\n                            <input type=\"number\" class=\"form-control\" id=\"brandName\" onChange={this.changeProductPrice} placeholder=\"Product Price\" required />\r\n                            <p>{this.state.productPriceError}</p>\r\n\r\n                            <button type=\"button\" class=\"btn btn-primary\" onClick={this.update}>Update</button>\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} export default Updatecount;","E:\\Module3\\Integrated\\SBS\\src\\components\\DeleteProduct.js",["198","199","200"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport SearchBox from './SearchBox';\n\n//import {BrowserRouter as Router,Route,Link ,NavLink} \n//from \"react-router-dom\";\nimport axios from \"axios\";\nimport  ReactPaginate from 'react-paginate';\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nclass DeleteProduct extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            offset: 0,\n            perPage: 5,\n            currentPage: 0,\n            searchField: '',   \n            orgtableData: [],         \n            product: [],\n            errMsg: \"\"\n        }\n\n        this.handlePageClick = this.handlePageClick.bind(this);\n    }\n\n    handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }, () => {\n            this.loadMoreData()\n        });\n\n    };\n\n    loadMoreData() {\n\t\tconst data = this.state.orgtableData;\n\t\t\n\t\tconst slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n\t\tthis.setState({\n\t\t\tpageCount: Math.ceil(data.length / this.state.perPage),\n\t\t\tproduct:slice\n\t\t})\n\t\n    }\n\n    componentDidMount() {\n        axios.get(`http://localhost:2211/product/allproduct`).then((responseData) => {\n            console.log(responseData);\n            var data = responseData.data;\n\t\t\t\t\n            var slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n\n            this.setState({\n                pageCount: Math.ceil(data.length / this.state.perPage),\n                    orgtableData :responseData.data,\n                 product: slice \n                })\n            console.log(data);\n        }).catch((error) => {\n            console.log(\"Some error in reading the data \");\n            this.setState({ errMsg: \"Error In Reading product Data\" })\n        })\n    }\n\n    delete = (id) => {//(id){\n        alert(id)\n\n        console.log(this.state.product)\n        for(const product of this.state.product){\n        \n            if(product.productId == id){\n                console.log(product);\n                const url =`http://localhost:2211/product/delete/`;\n                axios.put((url),{ ...product })\n                .then((responseEmpData) => {\n                            console.log(responseEmpData);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    console.log(\"Some error in updating product data\");\n                })\n         \n                break;\n            }\n        }\n        axios.get(`http://localhost:2211/product/allproduct`).then((responseData) => {\n            console.log(responseData);\n            this.setState({ product: responseData.data })\n\n        }).catch((error) => {\n            console.log(\"Some error in reading the data \");\n            this.setState({ errMsg: \"Error In Reading product Data\" })\n        })\n\n    }\n\n    render() {\n        \n\n        const { product, searchField } = this.state;\n        var filteredData = product.filter(productData => {\n    \n            if (productData.productName.toLowerCase().includes(searchField.toLowerCase())) {\n                return productData;\n\n            }\n            else if (productData.productBrand.toLowerCase().includes(searchField.toLowerCase())) {\n                return productData;\n\n            }\n            else if (productData.productModel.toLowerCase().includes(searchField.toLowerCase())) {\n                return productData;\n\n            }\n\n        })\n         \n            .map(\n                (productList, index) => {\n                    return (\n                        <tr key={productList.productId}>\n                            <td> {productList.productName} </td>\n                            <td>{productList.productBrand} </td>\n                            <td> {productList.productModel}</td>\n                            <td> {productList.productCount}</td>\n                            <td> {productList.productPrice}</td>\n                            <td>\n                            <button type=\"button\" onClick={() => { this.delete(`${productList.productId}`) }}>Delete </button>\n                            </td>\n                        </tr>\n\n\n                    )\n                }\n            );\n\n        return (\n            <div>\n\n\n                <h1>List Of Products</h1>\n                \n\n                <table class=\"table table-striped table-hover\" border=\"2\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col md-2\" className=\"bg-dark text-white\">Product Name</th>\n                            <th scope=\"col md-2\" className=\"bg-dark text-white\">Brand Name</th>\n                            <th scope=\"col md-2\" className=\"bg-dark text-white\">Model Name</th>\n                            <th scope=\"col md-2\" className=\"bg-dark text-white\">Price</th>\n                            <th scope=\"col md-2\" className=\"bg-dark text-white\">Available Count</th>\n                            <th scope=\"col md-2\" className=\"bg-dark text-white\">Action</th>\n                        </tr>\n\n                    </thead>\n\n                    <tbody>\n                        <tr>\n\n                            <td>\n\n                                <SearchBox placeholder=\"Product Name\" id=\"form1\" class=\"form-control\" handleChange={(e) => this.setState({ searchField: e.target.value })} />\n\n                            </td>\n                             <td>\n                                <SearchBox placeholder=\"Brand Name\" handleChange={(e) => this.setState({ searchField: e.target.value })} />\n                            </td>\n                            <td>\n                                <SearchBox placeholder=\"Model Name\" handleChange={(e) => this.setState({ searchField: e.target.value })} />\n                            </td>\n                            <td></td><td></td><td></td>\n\n                        </tr>\n                        {filteredData}\n\n\n                    </tbody>\n                </table>\n                <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={this.state.pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={this.handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/>\n            </div>\n        )\n    }\n\n}\n\nexport default DeleteProduct;","E:\\Module3\\Integrated\\SBS\\src\\components\\ExportExcel.js",["201"],"import React, { Component } from 'react'  \r\nimport axios from 'axios';  \r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel'; \r\n \r\nexport class ExportExcel extends Component \r\n{  \r\n    constructor(props) \r\n    {  \r\n        super(props)  \r\n        this.state =\r\n        {  \r\n            ProductData: []  \r\n        }  \r\n    }  \r\n    componentDidMount()\r\n    {  \r\n        axios.get('http://localhost:2211/product/allproduct').then(response =>\r\n        {  \r\n            console.log(response.data);  \r\n            this.setState\r\n            ({  \r\n                ProductData: response.data  \r\n            });  \r\n        }).catch((error) => {\r\n            console.log(\"Some error in reading the data \");\r\n            this.setState({ errMsg: \"Error In Reading product Data\" })\r\n        })\r\n    }  \r\n    render() \r\n    {  \r\n        var data=\r\n            this.state.ProductData.map((p, index) => \r\n            {  \r\n                return (<tr key={p.productId}>  \r\n                <td >{p.productId}</td>  \r\n                <td >{p.productName}</td>  \r\n                <td >{p.productModel}</td>  \r\n                <td >{p.productBrand}</td>  \r\n                <td >{p.productPrice}</td>  \r\n                <td >{p.productCount}</td>  \r\n                <td >{p.productCreatedAt}</td> \r\n                <td >{p.productUpdatedAt}</td> \r\n                <td >{p.productDeletedAt}</td>\r\n                <td style={{ paddingRight: \"114px\" }} >{p.productDeletedFlag}</td>  \r\n                </tr>  )\r\n            })  \r\n        \r\n        return (  \r\n            <div> \r\n                <h1 align=\"center\"><i className=\"fas fa-swatchbook\"> Stationary Booking System </i></h1> <br/>\r\n                <table class=\"table table-striped table-hover\" border=\"2\" id=\"Product\" class=\"table\">  \r\n                <thead>  \r\n                <tr>  \r\n                    <th scope=\"col\" className = \"bg-dark text-white\">Product\r\n                        Id</th>  \r\n                    <th scope=\"col\" className = \"bg-dark text-white\" >Product\r\n                        Name</th>  \r\n                    <th scope=\"col\" className = \"bg-dark text-white\">Product\r\n                        Model</th>  \r\n                    <th scope=\"col\" className = \"bg-dark text-white\">Product\r\n                        Brand</th>  \r\n                    <th scope=\"col\" className = \"bg-dark text-white\">Product\r\n                        Price</th>  \r\n                    <th scope=\"col\" className = \"bg-dark text-white\">Product\r\n                        Count</th>  \r\n                    <th scope=\"col\" className = \"bg-dark text-white\">Product\r\n                        CreatedAt</th>  \r\n                    <th scope=\"col\" className = \"bg-dark text-white\">Product\r\n                        UpdatedAt</th> \r\n                    <th scope=\"col\" className = \"bg-dark text-white\">Product\r\n                        DeletedAt</th>\r\n                    <th scope=\"col\" className = \"bg-dark text-white\"> Product\r\n                        DeletedFlag</th> \r\n                </tr>  \r\n                \r\n                </thead>  \r\n                <tbody>    \r\n                    {data}         \r\n                  \r\n            </tbody> \r\n                </table>  \r\n                <div class=\"text-center\">  \r\n                    <ReactHTMLTableToExcel  \r\n                        className=\"btn btn-success\"  table=\"Product\" filename=\"Products\"  sheet=\"Products\"  \r\n                        buttonText=\"DOWNLOAD\"  />  \r\n                </div>  \r\n            </div>  \r\n        )  \r\n    }  \r\n}  \r\nexport default ExportExcel;","E:\\Module3\\Integrated\\SBS\\src\\store.js",[],"E:\\Module3\\Integrated\\SBS\\src\\serviceWorker.js",[],"E:\\Module3\\Integrated\\SBS\\src\\helpers\\history.js",[],"E:\\Module3\\Integrated\\SBS\\src\\reducers\\index.js",[],"E:\\Module3\\Integrated\\SBS\\src\\reducers\\message.js",["202"],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/type\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","E:\\Module3\\Integrated\\SBS\\src\\reducers\\auth.js",["203"],"import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n  } from \"../actions/type\";\r\n  \r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n  const initialState = user\r\n    ? { isLoggedIn: true, user }\r\n    : { isLoggedIn: false, user: null };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: payload.user,\r\n        };\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }",{"ruleId":"204","severity":1,"message":"205","line":7,"column":8,"nodeType":"206","messageId":"207","endLine":7,"endColumn":23},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"204","severity":1,"message":"212","line":10,"column":8,"nodeType":"206","messageId":"207","endLine":10,"endColumn":13},{"ruleId":"204","severity":1,"message":"213","line":13,"column":8,"nodeType":"206","messageId":"207","endLine":13,"endColumn":19},{"ruleId":"208","replacedBy":"214"},{"ruleId":"210","replacedBy":"215"},{"ruleId":"204","severity":1,"message":"216","line":2,"column":26,"nodeType":"206","messageId":"207","endLine":2,"endColumn":32},{"ruleId":"204","severity":1,"message":"217","line":2,"column":33,"nodeType":"206","messageId":"207","endLine":2,"endColumn":38},{"ruleId":"204","severity":1,"message":"218","line":2,"column":39,"nodeType":"206","messageId":"207","endLine":2,"endColumn":43},{"ruleId":"219","severity":1,"message":"220","line":17,"column":25,"nodeType":"221","endLine":17,"endColumn":85},{"ruleId":"219","severity":1,"message":"220","line":38,"column":25,"nodeType":"221","endLine":38,"endColumn":58},{"ruleId":"204","severity":1,"message":"222","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":17},{"ruleId":"204","severity":1,"message":"223","line":6,"column":10,"nodeType":"206","messageId":"207","endLine":6,"endColumn":14},{"ruleId":"204","severity":1,"message":"224","line":6,"column":16,"nodeType":"206","messageId":"207","endLine":6,"endColumn":22},{"ruleId":"204","severity":1,"message":"225","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":17},{"ruleId":"226","severity":1,"message":"227","line":76,"column":25,"nodeType":"228","endLine":76,"endColumn":36},{"ruleId":"204","severity":1,"message":"218","line":2,"column":39,"nodeType":"206","messageId":"207","endLine":2,"endColumn":43},{"ruleId":"204","severity":1,"message":"216","line":3,"column":26,"nodeType":"206","messageId":"207","endLine":3,"endColumn":32},{"ruleId":"204","severity":1,"message":"217","line":3,"column":33,"nodeType":"206","messageId":"207","endLine":3,"endColumn":38},{"ruleId":"204","severity":1,"message":"218","line":3,"column":39,"nodeType":"206","messageId":"207","endLine":3,"endColumn":43},{"ruleId":"204","severity":1,"message":"229","line":4,"column":8,"nodeType":"206","messageId":"207","endLine":4,"endColumn":13},{"ruleId":"204","severity":1,"message":"223","line":5,"column":10,"nodeType":"206","messageId":"207","endLine":5,"endColumn":14},{"ruleId":"204","severity":1,"message":"224","line":5,"column":16,"nodeType":"206","messageId":"207","endLine":5,"endColumn":22},{"ruleId":"204","severity":1,"message":"218","line":5,"column":24,"nodeType":"206","messageId":"207","endLine":5,"endColumn":28},{"ruleId":"204","severity":1,"message":"230","line":3,"column":9,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"204","severity":1,"message":"225","line":4,"column":8,"nodeType":"206","messageId":"207","endLine":4,"endColumn":17},{"ruleId":"231","severity":1,"message":"232","line":43,"column":40,"nodeType":"233","messageId":"234","endLine":43,"endColumn":42},{"ruleId":"204","severity":1,"message":"223","line":4,"column":10,"nodeType":"206","messageId":"207","endLine":4,"endColumn":14},{"ruleId":"204","severity":1,"message":"224","line":4,"column":16,"nodeType":"206","messageId":"207","endLine":4,"endColumn":22},{"ruleId":"204","severity":1,"message":"218","line":4,"column":24,"nodeType":"206","messageId":"207","endLine":4,"endColumn":28},{"ruleId":"204","severity":1,"message":"223","line":4,"column":10,"nodeType":"206","messageId":"207","endLine":4,"endColumn":14},{"ruleId":"204","severity":1,"message":"224","line":4,"column":16,"nodeType":"206","messageId":"207","endLine":4,"endColumn":22},{"ruleId":"204","severity":1,"message":"218","line":4,"column":24,"nodeType":"206","messageId":"207","endLine":4,"endColumn":28},{"ruleId":"204","severity":1,"message":"223","line":3,"column":10,"nodeType":"206","messageId":"207","endLine":3,"endColumn":14},{"ruleId":"204","severity":1,"message":"224","line":3,"column":16,"nodeType":"206","messageId":"207","endLine":3,"endColumn":22},{"ruleId":"204","severity":1,"message":"235","line":7,"column":12,"nodeType":"206","messageId":"207","endLine":7,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":8,"column":52,"nodeType":"238","messageId":"239","endLine":8,"endColumn":53,"suggestions":"240"},{"ruleId":"241","severity":1,"message":"242","line":75,"column":55,"nodeType":"243","messageId":"244","endLine":75,"endColumn":57},{"ruleId":"231","severity":1,"message":"232","line":36,"column":34,"nodeType":"233","messageId":"234","endLine":36,"endColumn":36},{"ruleId":"231","severity":1,"message":"232","line":64,"column":34,"nodeType":"233","messageId":"234","endLine":64,"endColumn":36},{"ruleId":"231","severity":1,"message":"232","line":92,"column":32,"nodeType":"233","messageId":"234","endLine":92,"endColumn":34},{"ruleId":"245","severity":1,"message":"246","line":13,"column":10,"nodeType":"228","endLine":13,"endColumn":20},{"ruleId":"245","severity":1,"message":"246","line":13,"column":21,"nodeType":"228","endLine":13,"endColumn":41},{"ruleId":"247","severity":1,"message":"248","line":93,"column":36,"nodeType":"233","messageId":"249","endLine":93,"endColumn":37},{"ruleId":"204","severity":1,"message":"230","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":17},{"ruleId":"231","severity":1,"message":"232","line":75,"column":34,"nodeType":"233","messageId":"234","endLine":75,"endColumn":36},{"ruleId":"241","severity":1,"message":"242","line":105,"column":55,"nodeType":"243","messageId":"244","endLine":105,"endColumn":57},{"ruleId":"245","severity":1,"message":"246","line":51,"column":88,"nodeType":"228","endLine":51,"endColumn":101},{"ruleId":"250","severity":1,"message":"251","line":5,"column":1,"nodeType":"252","endLine":18,"endColumn":2},{"ruleId":"250","severity":1,"message":"251","line":13,"column":3,"nodeType":"252","endLine":38,"endColumn":4},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["253"],"no-negated-in-lhs",["254"],"'jsPDF' is defined but never used.","'html2canvas' is defined but never used.",["253"],["254"],"'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'logindata' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'SearchBox' is defined but never used.","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","'Modal' is defined but never used.","'NavLink' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isvalid' is defined but never used.","no-useless-escape","Unnecessary escape character: \\s.","Literal","unnecessaryEscape",["255","256"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-duplicate-props","No duplicate props allowed","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"messageId":"257","fix":"258","desc":"259"},{"messageId":"260","fix":"261","desc":"262"},"removeEscape",{"range":"263","text":"264"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"265","text":"266"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[308,309],"",[308,308],"\\"]